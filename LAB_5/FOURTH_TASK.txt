CREATE OR REPLACE DIRECTORY REPORT_DIR AS 'E:\Projects\DBMS_lab5';

exec generate_report(TO_DATE('2023-04-9 12:40:31', 'YYYY-MM-DD HH24:MI:SS'));

CREATE OR REPLACE PROCEDURE generate_report(desired_date DATE)
IS
    file UTL_FILE.file_type;
    buff VARCHAR(1000);
    num_passport_insert NUMBER;
    num_passport_update NUMBER;
    num_passport_delete NUMBER;

    num_groups_insert NUMBER;
    num_groups_update NUMBER;
    num_groups_delete NUMBER;

    num_students_insert NUMBER;
    num_students_update NUMBER;
    num_students_delete NUMBER;
BEGIN
    file := UTL_FILE.fopen('REPORT_DIR', 'report.html', 'W');
    IF NOT UTL_FILE.IS_OPEN(file) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Error in generate_report(). File ' || 'report.html' || ' does not open!');
    END IF;

    buff := HTF.HTMLOPEN || CHR(10) || HTF.headopen || CHR(10) || HTF.title('Report') 
            || CHR(10) || HTF.headclose || CHR(10) ||HTF.bodyopen || CHR(10);

    SELECT COUNT(*) INTO num_passport_insert FROM HISTORY 
    WHERE (NEW_PASSPORT_ID IS NOT NULL OR OLD_PASSPORT_ID IS NOT NULL) AND OPERATION = 'insert' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_passport_update FROM HISTORY 
    WHERE (NEW_PASSPORT_ID IS NOT NULL OR OLD_PASSPORT_ID IS NOT NULL) AND OPERATION = 'update' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_passport_delete FROM HISTORY 
    WHERE (NEW_PASSPORT_ID IS NOT NULL OR OLD_PASSPORT_ID IS NOT NULL) AND OPERATION = 'delete' AND OP_DATE >= desired_date;


    SELECT COUNT(*) INTO num_groups_insert FROM HISTORY 
    WHERE (NEW_GROUP_ID IS NOT NULL OR OLD_GROUP_ID IS NOT NULL) AND OPERATION = 'insert' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_groups_update FROM HISTORY 
    WHERE (NEW_GROUP_ID IS NOT NULL OR OLD_GROUP_ID IS NOT NULL) AND OPERATION = 'update' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_groups_delete FROM HISTORY 
    WHERE (NEW_GROUP_ID IS NOT NULL OR OLD_GROUP_ID IS NOT NULL) AND OPERATION = 'delete' AND OP_DATE >= desired_date;


    SELECT COUNT(*) INTO num_students_insert FROM HISTORY 
    WHERE (NEW_STUDENT_ID IS NOT NULL OR OLD_STUDENT_ID IS NOT NULL) AND OPERATION = 'insert' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_students_update FROM HISTORY 
    WHERE (NEW_STUDENT_ID IS NOT NULL OR OLD_STUDENT_ID IS NOT NULL) AND OPERATION = 'update' AND OP_DATE >= desired_date;

    SELECT COUNT(*) INTO num_students_delete FROM HISTORY 
    WHERE (NEW_STUDENT_ID IS NOT NULL OR OLD_STUDENT_ID IS NOT NULL) AND OPERATION = 'delete' AND OP_DATE >= desired_date;


    buff := buff || HTF.TABLEOPEN || CHR(10) || HTF.TABLEROWOPEN || CHR(10) || HTF.TABLEHEADER('') || CHR(10) || HTF.TABLEHEADER('Passport') || CHR(10) ||
    HTF.TABLEHEADER('Groups') || CHR(10) || HTF.TABLEHEADER('Students') || CHR(10) || HTF.TABLEROWCLOSE || CHR(10);

    buff := buff || HTF.TABLEROWOPEN || CHR(10) || HTF.TABLEHEADER('insert') || CHR(10) || HTF.TABLEDATA(num_passport_insert) || CHR(10) ||
    HTF.TABLEDATA(num_groups_insert) || CHR(10) || HTF.TABLEDATA(num_students_insert) || CHR(10) || HTF.TABLEROWCLOSE || CHR(10);

    buff := buff || HTF.TABLEROWOPEN || CHR(10) || HTF.TABLEHEADER('update') || CHR(10) || HTF.TABLEDATA(num_passport_update) || CHR(10) ||
    HTF.TABLEDATA(num_groups_update) || CHR(10) || HTF.TABLEDATA(num_students_update) || CHR(10) || HTF.TABLEROWCLOSE || CHR(10);

    buff := buff || HTF.TABLEROWOPEN || CHR(10) || HTF.TABLEHEADER('delete') || CHR(10) || HTF.TABLEDATA(num_passport_delete) || CHR(10) ||
    HTF.TABLEDATA(num_groups_delete) || CHR(10) || HTF.TABLEDATA(num_students_delete) || CHR(10) || HTF.TABLEROWCLOSE || CHR(10);

    buff := buff || HTF.TABLECLOSE || CHR(10) || HTF.bodyclose || CHR(10) || HTF.htmlclose;

    UTL_FILE.put_line (file, buff);
    UTL_FILE.fclose(file);
    EXCEPTION WHEN NO_DATA_FOUND THEN 
        RAISE_APPLICATION_ERROR(-20002, 'Error in generate_report(). NO_DATA_FOUND');
END generate_report;
